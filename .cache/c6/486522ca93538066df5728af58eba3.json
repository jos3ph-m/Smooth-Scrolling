{"id":"../node_modules/lodash-es/isSymbol.js","dependencies":[{"name":"C:\\Users\\joey\\python\\smooth_scrollbar\\package.json","includedInParent":true,"mtime":1593057020712},{"name":"C:\\Users\\joey\\python\\smooth_scrollbar\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1593055146441},{"name":"./_baseGetTag.js","loc":{"line":1,"column":23},"parent":"C:\\Users\\joey\\python\\smooth_scrollbar\\node_modules\\lodash-es\\isSymbol.js","resolved":"C:\\Users\\joey\\python\\smooth_scrollbar\\node_modules\\lodash-es\\_baseGetTag.js"},{"name":"./isObjectLike.js","loc":{"line":2,"column":25},"parent":"C:\\Users\\joey\\python\\smooth_scrollbar\\node_modules\\lodash-es\\isSymbol.js","resolved":"C:\\Users\\joey\\python\\smooth_scrollbar\\node_modules\\lodash-es\\isObjectLike.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _baseGetTag = _interopRequireDefault(require(\"./_baseGetTag.js\"));\n\nvar _isObjectLike = _interopRequireDefault(require(\"./isObjectLike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || (0, _isObjectLike.default)(value) && (0, _baseGetTag.default)(value) == symbolTag;\n}\n\nvar _default = isSymbol;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":5,"column":0}},{"name":"symbolTag","generated":{"line":15,"column":4},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":5,"column":4}},{"generated":{"line":15,"column":13},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":5,"column":13}},{"generated":{"line":15,"column":16},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":5,"column":16}},{"generated":{"line":15,"column":33},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":7,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":24,"column":0}},{"name":"isSymbol","generated":{"line":34,"column":9},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":24,"column":9}},{"generated":{"line":34,"column":17},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":24,"column":0}},{"name":"value","generated":{"line":34,"column":18},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":24,"column":18}},{"generated":{"line":34,"column":23},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":24,"column":0}},{"generated":{"line":34,"column":25},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":24,"column":25}},{"generated":{"line":35,"column":0},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":25,"column":2}},{"generated":{"line":35,"column":9},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":25,"column":9}},{"name":"value","generated":{"line":35,"column":16},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":25,"column":16}},{"generated":{"line":35,"column":21},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":25,"column":9}},{"generated":{"line":35,"column":25},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":25,"column":25}},{"generated":{"line":35,"column":33},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":25,"column":9}},{"generated":{"line":35,"column":37},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":26,"column":5}},{"name":"value","generated":{"line":35,"column":64},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":26,"column":18}},{"generated":{"line":35,"column":69},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":26,"column":5}},{"generated":{"line":35,"column":74},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":26,"column":28}},{"name":"value","generated":{"line":35,"column":99},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":26,"column":39}},{"generated":{"line":35,"column":104},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":26,"column":28}},{"name":"symbolTag","generated":{"line":35,"column":109},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":26,"column":49}},{"generated":{"line":35,"column":118},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":25,"column":2}},{"generated":{"line":36,"column":0},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":27,"column":1}},{"name":"isSymbol","generated":{"line":38,"column":15},"source":"../node_modules/lodash-es/isSymbol.js","original":{"line":29,"column":15}}],"sources":{"../node_modules/lodash-es/isSymbol.js":"import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n"},"lineCount":null}},"error":null,"hash":"7b8e45e77c831a997978e0de4a10ea79","cacheData":{"env":{}}}